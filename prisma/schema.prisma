
generator client {
  provider = "prisma-client-js"


}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id      String   @id @default(cuid())
  email   String   @unique
  username   String   @unique
  displayName   String   
  password String 
  bio String?
  location String?
  job String?
  website String?
  img String?
  cover String?
  createdAt DateTime @default(now())

  // RELATIONS
  posts   Post[]
  likes Like[]
  media Media[]
   saves SavedPosts[]
   followers Follow[] @relation("UserFollowers")
   followings Follow[] @relation("UserFollowings")
}
model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  desc     String?   @db.VarChar(255)
  media Media[]
 
  //RELATIONS
  user User @relation(fields:[userId],references: [id])
  userId String

  view Int @default(0)

  rePostId Int?
  rePost Post? @relation("RePosts", fields: [rePostId], references: [id])
  rePosts Post[] @relation("RePosts")


  

  parentPostId Int?
  parentPost Post? @relation("PostComments",fields:[parentPostId],references: [id])
  comments Post[] @relation("PostComments")


  likes Like[]
 saves SavedPosts[]
}

model Media {
  id Int @id @default(autoincrement())
  url String
  height Int
  width Int
  type String?
  public_id String?
  userId String
  postId Int
  user User @relation(fields: [userId],references: [id])
  post Post @relation(fields: [postId],references: [id])
}

model Like {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())

  userId String
  postId Int

  user User @relation(fields: [userId],references: [id])
  post Post @relation(fields: [postId],references: [id])
}
model SavedPosts {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())

  userId String
  postId Int

  user User @relation(fields: [userId],references: [id])
  post Post @relation(fields: [postId],references: [id])
}
model Follow {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())

  followerId String
  followingId String

  follower User @relation("UserFollowers",fields: [followerId],references: [id])
  following User @relation("UserFollowings",fields: [followingId],references: [id])
}
